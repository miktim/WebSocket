# Java SE WebSocket listener/connector,  MIT (c) 2020-2021 miktim@mail.ru

Release notes:
  - Java SE 7+, Android compatible;
  - in accordance with RFC-6455: https://tools.ietf.org/html/rfc6455;
  - supported WebSocket version: 13;
  - WebSocket extensions not supported;
  - client authentication not supported;
  - incoming message/payload length is limited to 2GB (Integer.MAX_VALUE).

Overview:
  Constructors:
    WebSocket() throws Exception;
    WebSocket(InetAddress bindAddr) throws Exception;

    Methods:
      static void setKeyStore(String keyFilePath, String passphrase); // set jvm keyStore (listener)
      static void setTrustStore(String keyFilePath, String passphrase); // set jvm trustStore (client)

      WsParameters getWsParameters();
      void setWsParameters(WsParameters wsp);
      WsListener listen(int port, WsHandler handler) throws Exception; 
      WsListener listenSafely(int port, WsHandler handler) throws Exception;
      WsConnection connect(String uri, WsHahdler handler) throws Exception;
      WsListener[] listListeners();
      WsConnection[] listConnections();
      void closeAll();

  WsParameters:
    see https://github.com/miktim/WsServer/blob/new/src/org/miktim/websocket/WsParameters.java

  WsHandler:
    see https://github.com/miktim/WsServer/blob/new/src/org/miktim/websocket/WsHandler.java

  WsListener (extends Thread, is created with current WebSocket parameters):
    Methods:
      boolean isOpen();
      boolean isSecure();
      WsParameters getWsParameters();
      WsConnection[] listConnections(); 
      void close(); // also closes all associated connections

  WsConnection (extends Thread, is created with current WebSocket/WsListener parameters):
    Constants:
      String VERSION = "2.3.0";

    Methods:
      boolean isOpen(); 
      boolean isSecure();
      String getPeerHost();
      int getPort() // 
      String getPath();  // returns request path or null
      String getQuery(); // returns request query or null
      String getSubProtocol(); // returns null or handshaked WebSocket subprotocol
      WsParameters getWsParameters();
      void send(String message) throws IOException; //
      void send(byte[] message) throws IOException; //
      void send(InputStream is, boolean isText) throws IOException;
      void close(); // close without status code (NO_STATUS)
      void close(int statusCode, String reason); // a reason longer than 123 bytes is truncated
      WsStatus getStatus();

  WsStatus:
    see https://github.com/miktim/WsServer/blob/new/src/org/miktim/websocket/WsStatus.java

Usage example see in:
  https://github.com/miktim/WebSocket/blob/new/test/WssConnectionTest.java
  https://github.com/miktim/WebSocket/blob/new/test/WsListenerTest.java
  https://github.com/miktim/WebSocket/blob/new/test/WssClientTest.java
