4.3.1
  - WsInputStream published
  - WsException class added
      unchecked exception "hides" checked cause
    FIXED:
      WebSocket(InetAddress)
      WebSocket.startServer
      WsbSocket.startSecureServer
      WebSocket.connect
      WsConnection.send(String)
      WsConnection.send(byte[])
4.3.0
  - deprecated methods:
      WebSocket:
        InetAddress getBindAddress() - renamed
        WsServer Server(...)
        WsServer SecureServer(...)
      WsServer:
        launch()
        close() - renamed
        close(String reason) - renamed
        isOpen() - renamed
        InetAddress getBindAddress()
        interrupt()
        isInterrupted()
        Handler.onAccept()
      WsConnection:
        MESSAGE_QUEUE_CAPACITY
//        getSocket()
        listConnections()
  - added methods:
      WebSocket:
        InetAddress getInterfaceAddress()
        WsConnection WebSocket.connect(String uri, WsHandler handler)
        WsServer WebSocket.startServer(int port, WsHandler handler)
        WsServer WebSocket.startServer(int port, WsHandler handler, WsParameters wsp)
        WsServer WebSocket.startSecureServer(int port, WsHandler handler)
        WsServer WebSocket.startSecureServer(int port, WsHandler handler, WsParameters wsp)
//        Socket getConnectionSocket(WsConnection conn)
      WsServer:
        boolean isActive()
        void stopServer()
        void stopServer(String reason)
//        Socket getConnectionSocket(WsConnection conn)
      WsConnection:
        void close(String reason),
        byte[] toByteArray(InputStream),
        String toString(InputStream, charsetName)
        String toString(InputStream),
        boolean isPrimaryHandler()
        WsConnection ready()
      WsParameters:
        setMaxMessages(int maxMsgs)
        getMaxMessages()
  - status code 1006 (ABNORMAL_CLOSURE) is used when connection handler failed
  - status code 1011 (INTERNAL_ERROR) is used when server crashed;
      
4.2.3
  - FIXED: receive messages until a closing frame is received;
  - FIXED: runtime errors in handlers close the connection,
    call onError and throw a RuntimeException;
  - status code 1011 (INTERNAL_ERROR) is used when handlers fail;
  - added WsHandlerTest, WsBasicTest;
  - FIXED: WsConnection.getPort() method;
  - FIXED: WsConnection.setHandler() method;
  - listener cancels connection close timer on exit;
  - FIXED: WsServer exceptions handling;
  - FIXED: WsConnection.close() closes connection with status code
    1000 (NORMAL_CLOSURE);
  - added status code 1015 (TLS_HANDSHAKE) for handshake SSLException.
4.2.2
  - the WsConnection class code has been reorganized (+WsHandshake, +WsIo classes).
4.2.1
  - JavaDoc created;
  - default server handler: server errors raise RuntimeException.
4.2.0
  - getServerSocket(), getSocket() methods added

4.1.4
  - FIXED: send() exception handling;
  - FIXED: 4.1.3 last push mistake.
 
4.1.3
  - WsConnection: asynchronous onError call;
  - WsConnection, WsListener: improved message waiting;
  - WebSocket, WsServer: minor edits

4.1.2
  - WsConnection: fixed WebSocket opening/closing handshake;
  - catch exceptions in the connection handler.

4.1.1
  - WsServer: fixed server closure after an interruption or ServerSocket error

4.1.0
  - the GetStatus function of the client connection is synchronized with
    the WebSocket handshake

4.0.1
  - server handler changed;
  - synchronization optimized;
  - fixed Android API23- bug 
    UnsupportedOperationException: at javax.net.ssl.SSLSocket.shutdownOutput

4.0.0
  - the objects are named according to their purpose;
  - improved exceptions handling: "message too big", "message queue overflow";
  - one more test added;
  - server event handler added;
  - International Domain Names (IDNs) support added

3.4.5
  - fixed bug with reading the HTTP header;
  - optimized data sending

3.4.4
  - closing onMessage input stream after exiting handler;
  - set socket handshakeSoTimeout on closing remotely

3.4.3
  - returned to the synchronous onMessage call. Message queue capacity = 3
  - fixed a connection dirty client closure bug, but in some cases this is normal
  
3.4.2
  - the bug that caused the Android API 30 read timeout has been fixed

3.4.1
  - WsListener interrupt() method added;
  - non-empty SSLParameters (SSLContext defaults); 
  - listener/connection: optimize exception handling

3.4.0a
  - fixed bugs when preparing TLS connections;
  - added the Ws parameter maxMessageLength

3.3.2a
The package has been significantly redesigned:
  - asynchronous reception of WebSocket messages;
  - added new methods to objects;
  - a test application has been created in the Android environment:
    https://github.com/miktim/WebSocket-Android-Test.
