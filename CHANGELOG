5.0.0 TODO
  - an "endless" input stream in the onMessage connection handler.
    Call onMessage() with the first received data frame.
    The available() method will return an estimate of the number
    of bytes that can be read, instead of the total number of bytes
    at the moment.

4.2.x TODO
  - !connection RuntimeException with handler exception as reason, try call onError handler's method
    (now printStackTrace only);
  - ?too many threads;
  - ?implements Closeable, AutoCloseable;
  - ?close connection Socket on errors as marker of an error (of course, closure not clean);
  - abstract classes WsListener, WsHandshake, ?WsInputStream with methods providing implementation of WebSocket extensions: WebSocket Per-Message Deflate (RFC7692), BBF USP Protocol ( https://usp.technology );
4.2.2
  - the WsConnection class code has been reorganized (+WsHandshake, +WsIo classes).
4.2.1
  - JavaDoc created;
  - server errors raise RuntimeException.
4.2.0
  - getServerSocket(), getSocket() methods added

4.1.4
  - fixed send() exception handling;
  - fixed 4.1.3 last push mistake.
 
4.1.3
  - WsConnection: asynchronous onError call;
  - WsConnection, WsListener: improved message waiting;
  - WebSocket, WsServer: minor edits

4.1.2
  - WsConnection: fixed WebSocket opening/closing handshake;
  - catch exceptions in the connection handler.

4.1.1
  - WsServer: fixed server closure after an interruption or ServerSocket error

4.1.0
  - the GetStatus function of the client connection is synchronized with
    the WebSocket handshake

4.0.1
  - server handler changed;
  - synchronization optimized;
  - fixed Android API23- bug 
    UnsupportedOperationException: at javax.net.ssl.SSLSocket.shutdownOutput

4.0.0
  - the objects are named according to their purpose;
  - improved exceptions handling: "message too big", "message queue overflow";
  - one more test added;
  - server event handler added;
  - International Domain Names (IDNs) support added

3.4.5
  - fixed bug with reading the HTTP header;
  - optimized data sending

3.4.4
  - closing onMessage input stream after exiting handler;
  - set socket handshakeSoTimeout on closing remotely

3.4.3
  - returned to the synchronous onMessage call. Message queue capacity = 3
  - fixed a connection dirty client closure bug, but in some cases this is normal
  
3.4.2
  - the bug that caused the Android API 30 read timeout has been fixed

3.4.1
  - WsListener interrupt() method added;
  - non-empty SSLParameters (SSLContext defaults); 
  - listener/connection: optimize exception handling

3.4.0a
  - fixed bugs when preparing TLS connections;
  - added the Ws parameter maxMessageLength

3.3.2a
The package has been significantly redesigned:
  - asynchronous reception of WebSocket messages;
  - added new methods to objects;
  - a test application has been created in the Android environment:
    https://github.com/miktim/WebSocket-Android-Test.
